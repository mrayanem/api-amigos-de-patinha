// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Sempre a primeira letra é maiúscula
// Modelos que representam as tabelas no banco de dados

enum Role {
  client
  admin
}

model User {
  id         String   @id @default(uuid()) @unique
  name       String
  email      String   @unique
  password   String
  state      String
  city       String
  telephone  String   @unique @default("00-00000-0000")
  animals    Animal[] 
  role       Role     
  status     Boolean  @default(true)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())

  @@map("users")
}

// Usar uma interrogação no final faz o campo ser opcional, ex: name String?
// amount é um tipo de quantidade
enum SPECIE {
  GATO
  CACHORRO

  @@map("specie")
}

enum SEX {
  MACHO
  FEMEA

  @@map("sexo")
}

enum ANIMALSIZE {
  PEQUENO
  MEDIO
  GRANDE

  @@map("porte")
}

enum livesWellIn {
  APARTAMENTO
  CASA
}

enum sociableWith {
  OUTROS_ANIMAIS
  CRIANCAS
  DESCONHECIDOS
}

enum vetCare {
  CASTRADO
  VACINADO
  VERMIFUGADO
}

model Animal {
  id          String   @id @default(uuid()) @unique
  name        String?
  sex         SEX
  age         Int
  animalSize  ANIMALSIZE
  state       String
  city        String
  description String
  photoAnimal String
  livesWellIn String
  status     Boolean  @default(true)
  sociableWith sociableWith
  vetCare vetCare
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  specie      SPECIE

  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt @default(now())

  @@map("animals")
}

model SubAnimalCategory {
  id             String         @id @default(uuid()) @unique
  categoryId     String         @unique
  animalCategory AnimalCategory @relation(fields: [categoryId], references: [id])

  created_at     DateTime       @default(now())
  updated_at DateTime @updatedAt

  @@map("SubAnimalCategories")
}

model AnimalCategory {
  id                String             @id @default(uuid()) @unique
  name              String
  subAnimalCategory SubAnimalCategory?

  created_at        DateTime           @default(now())
  updated_at DateTime @updatedAt @default(now())

  @@map("animalCategories")
}